
import numpy as np
from sentence_transformers import SentenceTransformer
from sklearn.metrics.pairwise import cosine_similarity
import pandas as pd
import matplotlib.pyplot as plt
from IPython.display import display

# Ваш текст (разбит на предложения)
documents = [
    "Энергия солнца может быть преобразована в электричество с помощью фотоэлектрических панелей, которые состоят из полупроводниковых материалов, таких как кремний.",
    "Ветряные турбины используют кинетическую энергию ветра для вращения лопастей, которые затем приводят в действие генератор, вырабатывающий электричество.",
    "Планета Земля является третьей по удаленности от Солнца и единственной известной планетой, поддерживающей жизнь. Около 71% её поверхности покрыто водой.",
    "Марс, известный как Красная планета, имеет тонкую атмосферу и является объектом активных исследований на предмет признаков прошлой или настоящей жизни.",
    "Фотосинтез — это процесс, при котором растения, водоросли и некоторые бактерии преобразуют световую энергию в химическую.",
    "В результате фотосинтеза выделяется кислород и синтезируются органические вещества.",
    "Луна является единственным естественным спутником Земли и пятым по величине спутником в Солнечной системе.",
    "Среднее расстояние от Земли до Луны составляет приблизительно 384 400 километров.",
    "Синий кит может достигать длины до 30 метров и весить до 200 тонн.",
    "Кит - это крупнейшее животное на планете, обитающее в океанах.",
    "Алмазы используются как драгоценные камни и в промышленности для резки и полировки.",
    "Алмаз — это аллотропная форма углерода, известная своей исключительной твердостью и блеском.",
    "Крупнейший океан на Земле — Тихий океан, занимающий около трети всей поверхности планеты.",
    "Гепарды известны своим грациозным телосложением и уникальными черными 'слезными дорожками' под глазами.",
    "Самый быстрый наземный зверь — гепард, способный развивать скорость до 120 км/ч на коротких дистанциях."
]

# Загрузка русскоязычной модели
model = SentenceTransformer("ai-forever/sbert_large_nlu_ru")

# Создание эмбеддингов для всех предложений
embeddings = model.encode(documents)

# Примеры запросов для тестирования
queries = [
    "Как получают электричество из солнечного света?",
    "Какое самое большое животное на Земле?",
    "Что известно о гепардах?",
    "Как далеко до Луны?",
    "Что такое фотосинтез?"
]

# Поиск по каждому запросу
results = {}
for query in queries:
    query_embedding = model.encode(query)
    similarities = cosine_similarity([query_embedding], embeddings)[0]
    top_indices = np.argsort(similarities)[-3:][::-1]  # Топ-3 результата
    
    results[query] = {
        "Лучший результат": documents[top_indices[0]],
        "Сходство": f"{similarities[top_indices[0]]:.3f}",
        "Другие варианты": [
            (documents[i], f"{similarities[i]:.3f}") for i in top_indices[1:]
        ]
    }

# Визуализация результатов
pd.set_option('display.max_colwidth', 100)
df = pd.DataFrame.from_dict(results, orient='index')
print("\nРезультаты поиска:")
display(df[["Лучший результат", "Сходство"]])

# Дополнительная визуализация (тепловая карта)
plt.figure(figsize=(12, 8))
similarity_matrix = cosine_similarity(embeddings)
plt.imshow(similarity_matrix, cmap="YlOrRd")
plt.xticks(range(len(documents)), range(len(documents)), rotation=90)
plt.yticks(range(len(documents)), range(len(documents)))
plt.colorbar(label="Косинусная близость")
plt.title("Сходство между предложениями", pad=20)
plt.tight_layout()
plt.show()